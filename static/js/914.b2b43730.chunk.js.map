{"version":3,"file":"static/js/914.b2b43730.chunk.js","mappings":"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","sources":["core/wrappers.ts","core/types.ts","core/engine.ts","core/test.worker.ts","core/cache.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { JSTypeName, CWrap } from \"pdfium/emscripten\";\nimport { WrappedModule } from \"pdfium/wrappers\";\n\nexport const wrappedModuleMethods = {\n  PDFium_Init: [[] as const, \"\"] as const,\n  PDFium_OpenFileWriter: [[] as const, \"number\"] as const,\n  PDFium_CloseFileWriter: [[\"number\"] as const, \"\"] as const,\n  PDFium_GetFileWriterSize: [[\"number\"] as const, \"number\"] as const,\n  PDFium_GetFileWriterData: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"\",\n  ] as const,\n  PDFium_OpenFormFillInfo: [[] as const, \"number\"] as const,\n  PDFium_CloseFormFillInfo: [[\"number\"] as const, \"\"] as const,\n  PDFium_InitFormFillEnvironment: [\n    [\"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  PDFium_ExitFormFillEnvironment: [[\"number\"] as const, \"number\"] as const,\n  PDFium_SaveAsCopy: [[\"number\", \"number\"] as const, \"\"] as const,\n  FPDF_LoadMemDocument: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\" as const,\n  ] as const,\n  FPDF_GetPageSizeByIndexF: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDF_GetLastError: [[] as const, \"number\"] as const,\n  FPDF_GetPageCount: [[\"number\"] as const, \"number\"] as const,\n  FPDF_CloseDocument: [[\"number\"] as const, \"\"] as const,\n  FPDF_DestroyLibrary: [[] as const, \"\"] as const,\n  FPDF_GetMetaText: [\n    [\"number\", \"string\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBitmap_FillRect: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"\",\n  ] as const,\n  FPDFBitmap_Create: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBitmap_CreateEx: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBitmap_GetBuffer: [[\"number\"] as const, \"number\"] as const,\n  FPDFBitmap_GetWidth: [[\"number\"] as const, \"number\"] as const,\n  FPDFBitmap_GetHeight: [[\"number\"] as const, \"number\"] as const,\n  FPDFBitmap_GetFormat: [[\"number\"] as const, \"number\"] as const,\n  FPDFBitmap_Destroy: [[\"number\"] as const, \"\"] as const,\n  FPDFPageObj_Destroy: [[\"number\"] as const, \"\"] as const,\n  FPDFPageObj_NewImageObj: [[\"number\"] as const, \"number\"] as const,\n  FPDFPageObj_SetMatrix: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFPageObj_GetBounds: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDFPageObj_Transform: [\n    [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n    ] as const,\n    \"\",\n  ] as const,\n  FPDFImageObj_SetBitmap: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDFImageObj_GetBitmap: [[\"number\"] as const, \"number\"] as const,\n  FPDFPath_CountSegments: [[\"number\"] as const, \"number\"] as const,\n  FPDFPath_GetPathSegment: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFPathSegment_GetType: [[\"number\"] as const, \"number\"] as const,\n  FPDFPathSegment_GetPoint: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDFPathSegment_GetClose: [[\"number\"] as const, \"boolean\"] as const,\n  FPDFFormObj_CountObjects: [[\"number\"] as const, \"number\"] as const,\n  FPDFFormObj_GetObject: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFBookmark_GetFirstChild: [\n    [\"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBookmark_GetNextSibling: [\n    [\"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBookmark_Find: [[\"number\", \"string\"] as const, \"number\"] as const,\n  FPDFBookmark_GetTitle: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFBookmark_GetAction: [[\"number\"] as const, \"number\"] as const,\n  FPDFBookmark_GetDest: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFAction_GetType: [[\"number\"] as const, \"number\"] as const,\n  FPDFAction_GetFilePath: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAction_GetDest: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFAction_GetURIPath: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFDest_GetDestPageIndex: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFDest_GetView: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFDest_GetLocationInPage: [\n    [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n    ] as const,\n    \"boolean\",\n  ] as const,\n  FPDF_LoadPage: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDF_RenderPageBitmap: [\n    [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n    ] as const,\n    \"\",\n  ] as const,\n  FPDF_PageToDevice: [\n    [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n    ] as const,\n    \"\",\n  ] as const,\n  FPDF_DeviceToPage: [\n    [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n      \"number\",\n    ] as const,\n    \"boolean\",\n  ] as const,\n  FPDFPage_GetAnnotCount: [[\"number\"] as const, \"number\"] as const,\n  FPDFPage_GetAnnot: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFPage_CreateAnnot: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFPage_InsertObject: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFPage_RemoveAnnot: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFPage_GenerateContent: [[\"number\"] as const, \"boolean\"] as const,\n  FPDF_ClosePage: [[\"number\"] as const, \"\"] as const,\n  FPDFAnnot_GetSubtype: [[\"number\"] as const, \"number\"] as const,\n  FPDFAnnot_GetAP: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetObjectCount: [[\"number\"] as const, \"number\"] as const,\n  FPDFAnnot_GetObject: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFAnnot_AppendObject: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFAnnot_GetRect: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFAnnot_SetRect: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFAnnot_GetLink: [[\"number\"], \"number\"] as const,\n  FPDFAnnot_GetFormFieldType: [\n    [\"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetFormFieldFlags: [\n    [\"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetFormFieldName: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetFormFieldAlternateName: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetFormFieldValue: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetOptionCount: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFAnnot_GetOptionLabel: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_IsOptionSelected: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDFAnnot_IsChecked: [[\"number\", \"number\"] as const, \"boolean\"] as const,\n  FPDFAnnot_GetStringValue: [\n    [\"number\", \"string\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetColor: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetLinkedAnnot: [[\"number\", \"string\"] as const, \"number\"] as const,\n  FPDFAnnot_GetInkListCount: [[\"number\"] as const, \"number\"] as const,\n  FPDFAnnot_GetInkListPath: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_AddInkStroke: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_RemoveInkList: [[\"number\"] as const, \"boolean\"] as const,\n  FPDFAnnot_GetVertices: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAnnot_GetLine: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFPageObj_GetType: [[\"number\"] as const, \"number\"] as const,\n  FPDFLink_GetDest: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFLink_GetAction: [[\"number\"] as const, \"number\"] as const,\n  FPDFText_LoadPage: [[\"number\"] as const, \"number\"] as const,\n  FPDFText_CountChars: [[\"number\"] as const, \"number\"] as const,\n  FPDFText_CountRects: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFText_GetRect: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"],\n    \"boolean\",\n  ] as const,\n  FPDFText_GetCharIndexAtPos: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"],\n    \"number\",\n  ] as const,\n  FPDFText_GetFontSize: [[\"number\", \"number\"], \"number\"] as const,\n  FPDFText_GetFontInfo: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"],\n    \"number\",\n  ] as const,\n  FPDFText_GetBoundedText: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"],\n    \"number\",\n  ] as const,\n  FPDFText_FindStart: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFText_FindNext: [[\"number\"] as const, \"boolean\"] as const,\n  FPDFText_FindPrev: [[\"number\"] as const, \"boolean\"] as const,\n  FPDFText_GetSchResultIndex: [[\"number\"] as const, \"number\"] as const,\n  FPDFText_GetSchCount: [[\"number\"] as const, \"number\"] as const,\n  FPDFText_FindClose: [[\"number\"] as const, \"\"] as const,\n  FPDFText_ClosePage: [[\"number\"] as const, \"\"] as const,\n  FPDFText_GetText: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFPage_CloseAnnot: [[\"number\"] as const, \"\"] as const,\n  FPDFDoc_GetAttachmentCount: [[\"number\"] as const, \"number\"] as const,\n  FPDFDoc_GetAttachment: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFAttachment_GetName: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAttachment_GetStringValue: [\n    [\"number\", \"string\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFAttachment_GetFile: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDF_GetSignatureCount: [[\"number\"] as const, \"number\"] as const,\n  FPDF_GetSignatureObject: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFSignatureObj_GetContents: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFSignatureObj_GetByteRange: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFSignatureObj_GetSubFilter: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFSignatureObj_GetReason: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFSignatureObj_GetTime: [\n    [\"number\", \"number\", \"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDFSignatureObj_GetDocMDPPermission: [\n    [\"number\"] as const,\n    \"number\",\n  ] as const,\n  FPDF_CreateNewDocument: [[] as const, \"number\"] as const,\n  FPDF_ImportPagesByIndex: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDF_ImportPages: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"boolean\",\n  ] as const,\n  FPDFPage_CountObjects: [[\"number\"] as const, \"number\"] as const,\n  FPDFPage_GetObject: [[\"number\", \"number\"] as const, \"number\"] as const,\n  FPDFText_GetCharBox: [\n    [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"] as const,\n    \"\",\n  ] as const,\n  FPDFText_GetMatrix: [[\"number\", \"number\", \"number\"] as const, \"\"] as const,\n  FPDFText_GetCharOrigin: [\n    [\"number\", \"number\", \"number\", \"number\"] as const,\n    \"\",\n  ] as const,\n};\n\nexport function wrap<\n  T extends Record<string, readonly [readonly JSTypeName[], JSTypeName]>\n>(cwrap: CWrap, dict: T): WrappedModule<T> {\n  const wrappedModule = {} as WrappedModule<T>;\n\n  for (const key in dict) {\n    wrappedModule[key] = cwrap(key, dict[key][1], dict[key][0]);\n  }\n\n  return wrappedModule;\n}\n","import { FSMatrix } from \"./geometry\";\n\nexport enum BitmapFormat {\n  Bitmap_Gray = 1,\n  Bitmap_BGR = 2,\n  Bitmap_BGRx = 3,\n  Bitmap_BGRA = 4,\n}\n\nexport enum RenderFlag {\n  ANNOT = 0x01, // Set if annotations are to be rendered.\n  LCD_TEXT = 0x02, // Set if using text rendering optimized for LCD display.\n  NO_NATIVETEXT = 0x04, // Don't use the native text output available on some platforms\n  GRAYSCALE = 0x08, // Grayscale output.\n  DEBUG_INFO = 0x80, // Set if you want to get some debug info. Please discuss with Foxit first if you need to collect debug info.\n  NO_CATCH = 0x100, // Set if you don't want to catch exception.\n  RENDER_LIMITEDIMAGECACHE = 0x200, // Limit image cache size.\n  RENDER_FORCEHALFTONE = 0x400, // Always use halftone for image stretching.\n  PRINTING = 0x800, // Render for printing.\n  REVERSE_BYTE_ORDER = 0x10, // Set whether render in a reverse Byte order, this flag only.\n}\n\nexport type PDFTextRect = {\n  text: string;\n  rect: PDFRect;\n  transformX: number;\n  transformY: number;\n};\n\nexport type PDFRect = {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport type PDFMetadata = {\n  title: string;\n  author: string;\n  subject: string;\n  keywords: string;\n  producer: string;\n  creator: string;\n  creationDate: string;\n  modificationDate: string;\n};\n\nexport type PDFFile = {\n  id: string;\n  name: string;\n  content: ArrayBuffer;\n};\n\nexport enum Rotation {\n  Degree0 = 0,\n  Degree90 = 1,\n  Degree180 = 2,\n  Degree270 = 3,\n}\n\nexport enum MatchFlag {\n  None = 0,\n  MatchCase = 1,\n  MatchWholeWord = 2,\n  MatchConsecutive = 4,\n}\n\nexport interface SearchTarget {\n  keyword: string;\n  // flags: MatchFlag[];\n  flag: MatchFlag;\n}\n\nexport interface SearchContext {\n  target: SearchTarget;\n  currPageIndex: number;\n  startIndex: number; // -1 means reach the end\n}\n\nexport type FontData = {\n  fontSize: number;\n  fontFamily: string;\n  fsMatrix: FSMatrix;\n};\n\nexport type TextSelection = {\n  startPageIndex: number;\n  endPageIndex: number;\n  startCharIndex: number;\n  endCharIndex: number;\n};\n\nexport type CharBounds = {\n  start: number;\n  offset: number;\n};\n\nexport type PageTextSelection = {\n  start: number;\n  end: number;\n  index: number;\n};\n\nexport type Page = {\n  width: number;\n  height: number;\n  docPtr: number;\n  index: number;\n};\n\nexport enum GroupMode {\n  SinglePage = \"single-page\",\n  DualPage = \"dual-page\",\n}\n\nexport enum ScrollMode {\n  Vertical = \"vertical\",\n  Horizontal = \"horizontal\",\n}\n\nexport enum SpecialZoom {\n  PageFit = \"page-fit\",\n  PageWidth = \"page-width\",\n  None = \"none\",\n}\n\nexport type InitialViewerState = {\n  scale: number;\n  pageIndex: number;\n};\n\nexport type WorkerInputPayloads = {\n  LOAD_DOCUMENT: { file: PDFFile; password: string };\n  RENDER_PAGE: { page: Page; scale: number };\n  GET_SELECTED_TEXT: {\n    startPageIndex: number;\n    endPageIndex: number;\n    startCoords: Coords;\n    endCoords: Coords;\n  };\n  GET_THUMBNAILS: Page[];\n  GET_METADATA: undefined;\n  SEARCH_TEXT: SearchTarget;\n};\n\nexport type WorkerOutputPayloads = {\n  INIT_PDFIUM: undefined;\n  PAGES: Page[];\n  IMAGEDATA: { imageData: ImageData; renderedScale: number; index: number };\n  TEXT_RECTS: { index: number; textRects: PDFTextRect[] };\n  SELECTED_TEXT: string;\n  THUMBNAILS: string[];\n  METADATA: PDFMetadata;\n  SEARCHED_TEXT: {\n    pageIndex: number;\n    charIndex: number;\n    charCount: number;\n  }[];\n};\n\nexport type WorkerInputKeys = keyof Required<WorkerInputPayloads>;\nexport type WorkerOutputKeys = keyof Required<WorkerOutputPayloads>;\n\nexport type WorkerRequest = {\n  [T in WorkerInputKeys]: { type: T; payload: WorkerInputPayloads[T] };\n}[WorkerInputKeys];\n\nexport type WorkerResult = {\n  [T in WorkerOutputKeys]: { type: T; payload: WorkerOutputPayloads[T] };\n}[WorkerOutputKeys];\n\nexport type PageStatus = {\n  rendered: boolean;\n  scale: number;\n};\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type SearchResult = {\n  occurrences: number;\n  pageIndex: number;\n};\n\nexport type ViewerCallbacks = {\n  onSearch: (result: SearchResult[] | undefined) => void;\n  onPageRender: (indexes: number[]) => void;\n};\n\nexport type ViewerHandlers = {\n  // scrolls to page by index\n  goToPage: (index: number) => void;\n  // scrolls to next page by index\n  next: () => void;\n  // scrolls to prev page by index\n  prev: () => void;\n  // zoom to special scale\n  zoomToSpecialValue: (scale: SpecialZoom) => void;\n  // zoom to scale\n  zoom: (scale: number) => void;\n  // zoom in\n  zoomIn: () => void;\n  // zoom out\n  zoomOut: () => void;\n  // gets thumbnails for the given indexes\n  // getThumbnails: (startIndex: number, endIndex: number) => void;\n  // gets metadata\n  // getMetadata: () => void;\n  // search word starting from TOP of pdf & scrolls to first occurrence\n  // findNext: (keyword: string, flag: MatchFlag) => void;\n  // search word starting from BOTTOM of pdf & scrolls to first occurrence\n  // findLast: (keyword: string, flag: MatchFlag) => void;\n};\n","import { wrap, wrappedModuleMethods } from \"./wrappers\";\nimport { WrappedModule } from \"pdfium/wrappers\";\nimport { PdfiumModule } from \"pdfium/pdfium\";\nimport { CTypeName } from \"pdfium/emscripten\";\nimport {\n  Coords,\n  BitmapFormat,\n  CharBounds,\n  PDFFile,\n  PDFTextRect,\n  RenderFlag,\n  PDFRect,\n  PageTextSelection,\n  Page,\n  MatchFlag,\n} from \"./types\";\n\nlet mod: WrappedModule<typeof wrappedModuleMethods>;\nlet pdfium: PdfiumModule;\nconst canvas = new OffscreenCanvas(1, 1);\n\n// should only be called once\nexport const createEngine = (pdfiumModule: PdfiumModule) => {\n  mod = wrap(pdfiumModule.cwrap, wrappedModuleMethods);\n  pdfium = pdfiumModule;\n  // @ts-ignore\n  mod.PDFium_Init();\n};\n\nconst destroy = () => {\n  // @ts-ignore\n  mod.FPDF_DestroyLibrary();\n};\nconst malloc = (size: number) => {\n  return pdfium._malloc(size);\n};\nconst free = (ptr: number) => {\n  pdfium._free(ptr);\n};\nconst setHEAPU8 = (array: ArrayLike<number>, offset?: number | undefined) => {\n  pdfium.HEAPU8.set(array, offset);\n};\nconst getBitmapArrayBuffer = (ptr: number, len: number) => {\n  const arr = new Uint8ClampedArray(len);\n  arr.set(pdfium.HEAPU8.subarray(ptr, ptr + len));\n  return arr;\n};\nconst getValue = (ptr: number, value: CTypeName) => {\n  return pdfium.getValue(ptr, value);\n};\nconst UTF8ToString = (ptr: number) => {\n  return pdfium.UTF8ToString(ptr);\n};\nconst UTF16ToString = (ptr: number) => {\n  return pdfium.UTF16ToString(ptr);\n};\nconst stringToUTF8 = (\n  str: string,\n  outPtr: number,\n  maxBytesToRead?: number | undefined\n) => {\n  return pdfium.stringToUTF8(str, outPtr, maxBytesToRead);\n};\nconst readString = (\n  readChars: (buffer: number, bufferLength: number) => number,\n  parseChars: (buffer: number) => string,\n  defaultLength: number = 100\n) => {\n  let buffer = malloc(defaultLength);\n  for (let i = 0; i < defaultLength; i++) {\n    pdfium.HEAP8[buffer + i] = 0;\n  }\n  const actualLength = readChars(buffer, defaultLength);\n  let str: string;\n  if (actualLength > defaultLength) {\n    free(buffer);\n    buffer = malloc(actualLength);\n    for (let i = 0; i < actualLength; i++) {\n      pdfium.HEAP8[buffer + i] = 0;\n    }\n    readChars(buffer, actualLength);\n    str = parseChars(buffer);\n  } else {\n    str = parseChars(buffer);\n  }\n  free(buffer);\n  return str;\n};\nconst getTextFromRect = (textPagePtr: number, rect: PDFRect) => {\n  const { left, top, right, bottom } = rect;\n  //* Somehow getCharIndex is faster than getting the bounded text\n  const start = PDFEngine.getCharIndex(textPagePtr, { x: left, y: top });\n  const end = PDFEngine.getCharIndex(textPagePtr, { x: right, y: bottom });\n  const offset = end - start;\n  const text = getTextFromPage(textPagePtr, { start, offset });\n  return text;\n};\n// returns the bounding box of a given character\n// identified by the textPage pointer and its index\nconst getCharRect = (textPagePtr: number, index: number): PDFRect => {\n  const topPtr = malloc(8);\n  const leftPtr = malloc(8);\n  const rightPtr = malloc(8);\n  const bottomPtr = malloc(8);\n  mod.FPDFText_GetCharBox(\n    textPagePtr,\n    index,\n    leftPtr,\n    rightPtr,\n    bottomPtr,\n    topPtr\n  );\n\n  const left = getValue(leftPtr, \"double\");\n  const top = getValue(topPtr, \"double\");\n  const right = getValue(rightPtr, \"double\");\n  const bottom = getValue(bottomPtr, \"double\");\n\n  free(leftPtr);\n  free(topPtr);\n  free(rightPtr);\n  free(bottomPtr);\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    x: left,\n    y: top,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n  };\n};\nconst getPDFCoords = (\n  pagePtr: number,\n  pageWidth: number,\n  pageHeight: number,\n  coords: Coords\n) => {\n  const deviceXPtr = malloc(4);\n  const deviceYPtr = malloc(4);\n  mod.FPDF_PageToDevice(\n    pagePtr,\n    0,\n    0,\n    pageWidth,\n    pageHeight,\n    0,\n    coords.x,\n    coords.y,\n    deviceXPtr,\n    deviceYPtr\n  );\n  const x = getValue(deviceXPtr, \"i32\");\n  const y = getValue(deviceYPtr, \"i32\");\n\n  free(deviceXPtr);\n  free(deviceYPtr);\n\n  return { x, y };\n};\n\nconst getRect = (textPagePtr: number, index: number): PDFRect | undefined => {\n  const topPtr = malloc(8);\n  const leftPtr = malloc(8);\n  const rightPtr = malloc(8);\n  const bottomPtr = malloc(8);\n  const success = mod.FPDFText_GetRect(\n    textPagePtr,\n    index,\n    leftPtr,\n    topPtr,\n    rightPtr,\n    bottomPtr\n  );\n  if (!success) return;\n\n  const left = getValue(leftPtr, \"double\");\n  const top = getValue(topPtr, \"double\");\n  const right = getValue(rightPtr, \"double\");\n  const bottom = getValue(bottomPtr, \"double\");\n\n  free(leftPtr);\n  free(topPtr);\n  free(rightPtr);\n  free(bottomPtr);\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    x: left,\n    y: top,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n  };\n};\nconst getCharIndex = (textPagePtr: number, pos: Coords) => {\n  return mod.FPDFText_GetCharIndexAtPos(textPagePtr, pos.x, pos.y, 10.0, 10.0);\n};\nconst getTextFromPage = (textPagePtr: number, bounds: CharBounds) => {\n  const bufferPtr = malloc((bounds.offset + 1) * 2);\n  mod.FPDFText_GetText(textPagePtr, bounds.start, bounds.offset, bufferPtr);\n  const text = UTF16ToString(bufferPtr);\n  free(bufferPtr);\n  return text;\n};\n\nconst getThumbnails = async (pages: Page[]) => {\n  return await Promise.all(\n    pages.map((page) => {\n      const imageData = renderPageAsBMP(\n        page.index,\n        page.docPtr,\n        page.width / 2,\n        page.height / 2,\n        0.5\n      );\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      const ctx = canvas.getContext(\n        \"2d\"\n      ) as OffscreenCanvasRenderingContext2D | null;\n      if (ctx) {\n        ctx.putImageData(imageData, 0, 0);\n        // return (\n        //   canvas\n        //     //! convertToBlob throws an error but the thing runs :D\n        //     .convertToBlob()\n        //     .then((blob: Blob) => URL.createObjectURL(blob))\n        // );\n      }\n      return \"\";\n    })\n  );\n};\n\nconst getThumbnailsForPage = async (\n  docPtr: number,\n  index: number,\n  width: number,\n  height: number\n) => {\n  const pagePtr = mod.FPDF_LoadPage(docPtr, index);\n  const imageData = renderPageAsBMP(pagePtr, width, height, 0.5, 1);\n  mod.FPDF_ClosePage(pagePtr);\n\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  const ctx = canvas.getContext(\n    \"2d\"\n  ) as OffscreenCanvasRenderingContext2D | null;\n  if (!ctx) return;\n  ctx.putImageData(imageData, 0, 0);\n  return (\n    canvas\n      //! convertToBlob throws an error but the thing runs :D\n      .convertToBlob()\n      .then((blob: Blob) => URL.createObjectURL(blob))\n  );\n};\n\nconst renderPageAsBMP = (\n  pagePtr: number,\n  pageWidth: number,\n  pageHeight: number,\n  scale: number,\n  DPI: number\n) => {\n  const bytesPerPixel = 4;\n  const w = Math.ceil(pageWidth * scale * DPI);\n  const h = Math.ceil(pageHeight * scale * DPI);\n  const len = w * h * bytesPerPixel;\n  const ptr = malloc(len);\n  const bitmapPtr = mod.FPDFBitmap_CreateEx(\n    w,\n    h,\n    BitmapFormat.Bitmap_BGRA,\n    ptr,\n    w * bytesPerPixel\n  );\n  mod.FPDFBitmap_FillRect(bitmapPtr, 0, 0, w, h, 0xffffffff);\n  mod.FPDF_RenderPageBitmap(\n    bitmapPtr,\n    pagePtr,\n    0,\n    0,\n    w,\n    h,\n    0, // rotation\n    RenderFlag.REVERSE_BYTE_ORDER\n  );\n  mod.FPDFBitmap_Destroy(bitmapPtr);\n  const buffer = getBitmapArrayBuffer(ptr, len);\n  free(ptr);\n  free(bitmapPtr);\n  return new ImageData(buffer, w, h);\n};\n\nconst measureWidth = (text: string) => {\n  const ctx = canvas.getContext(\n    \"2d\"\n  ) as OffscreenCanvasRenderingContext2D | null;\n  if (!ctx) return 0;\n  ctx.font = \"normal 16px Arial, sans-serif\";\n  return ctx.measureText(text).width;\n};\n\nconst getTextRectsForPage = (\n  pagePtr: number,\n  textPagePtr: number,\n  pageWidth: number,\n  pageHeight: number,\n  start: number = 0,\n  offset: number = -1\n) => {\n  const textRects: PDFTextRect[] = [];\n  const rectsCount = mod.FPDFText_CountRects(textPagePtr, start, offset);\n  for (let i = 0; i < rectsCount; i++) {\n    const currentRect = getRect(textPagePtr, i);\n    if (!currentRect) continue;\n    // updates page PDFRect origin to match the device \"user space\"\n    const { x, y } = getPDFCoords(pagePtr, pageWidth, pageHeight, {\n      x: currentRect.left,\n      y: currentRect.top,\n    });\n    currentRect.x = x;\n    currentRect.y = y;\n    const text = getTextFromRectOld(textPagePtr, currentRect);\n    textRects.push({\n      rect: currentRect,\n      text,\n      transformX: currentRect.width / measureWidth(text),\n      transformY: currentRect.height / 16,\n    });\n  }\n  return textRects;\n};\n\nconst openDocument = (file: PDFFile, password: string = \"\") => {\n  const array = new Uint8Array(file.content);\n  const length = array.length;\n  const filePtr = malloc(length);\n\n  setHEAPU8(array, filePtr);\n  const passwordBytesSize = new TextEncoder().encode(password).length + 1;\n  const passwordPtr = malloc(passwordBytesSize);\n  stringToUTF8(password, passwordPtr, passwordBytesSize);\n\n  const docPtr = mod.FPDF_LoadMemDocument(filePtr, length, passwordPtr);\n\n  free(passwordPtr);\n\n  if (!docPtr) {\n    // TODO: why ts error?\n    // @ts-ignore\n    const lastError = mod.FPDF_GetLastError();\n    free(filePtr);\n    console.error(lastError);\n    return;\n  }\n\n  const pageCount = mod.FPDF_GetPageCount(docPtr);\n  const sizePtr = malloc(8);\n\n  const pages: Page[] = [];\n\n  for (let index = 0; index < pageCount; index++) {\n    const result = mod.FPDF_GetPageSizeByIndexF(docPtr, index, sizePtr);\n    if (result === 0) {\n      // TODO: why ts error?\n      // @ts-ignore\n      const lastError = mod.FPDF_GetLastError();\n      free(sizePtr);\n      mod.FPDF_CloseDocument(docPtr);\n      free(passwordPtr);\n      free(filePtr);\n      console.error(lastError);\n      return;\n    }\n\n    pages.push({\n      height: getValue(sizePtr + 4, \"float\"),\n      width: getValue(sizePtr, \"float\"),\n      docPtr: docPtr,\n      index,\n    });\n  }\n  free(sizePtr);\n  return { pages, pageCount, docPtr };\n};\nconst getMetadata = (docPtr: number) => {\n  if (docPtr === undefined) {\n    console.error(\"getMetadata: document does not exist\");\n    return;\n  }\n  return {\n    title: readMetaText(docPtr, \"Title\"),\n    author: readMetaText(docPtr, \"Author\"),\n    subject: readMetaText(docPtr, \"Subject\"),\n    keywords: readMetaText(docPtr, \"Keywords\"),\n    producer: readMetaText(docPtr, \"Producer\"),\n    creator: readMetaText(docPtr, \"Creator\"),\n    creationDate: readMetaText(docPtr, \"CreationDate\"),\n    modificationDate: readMetaText(docPtr, \"ModDate\"),\n  };\n};\n\nconst readMetaText = (docPtr: number, key: string) => {\n  return readString(\n    (buffer, bufferLength) =>\n      mod.FPDF_GetMetaText(docPtr, key, buffer, bufferLength),\n    UTF16ToString\n  );\n};\n\nconst extractText = (\n  docPtr: number,\n  pageCount: number,\n  pageIndexes?: number[]\n) => {\n  if (docPtr === undefined) return;\n  let indexes = pageIndexes ?? [];\n  if (!pageIndexes) {\n    indexes = Array.from(Array(pageCount).keys());\n  }\n\n  const strings: string[] = [];\n  for (let i = 0; i < indexes.length; i++) {\n    const pagePtr = mod.FPDF_LoadPage(docPtr, indexes[i]);\n    const textPagePtr = mod.FPDFText_LoadPage(pagePtr);\n    const charCount = mod.FPDFText_CountChars(textPagePtr);\n    const bufferPtr = malloc((charCount + 1) * 2);\n    mod.FPDFText_GetText(textPagePtr, 0, charCount, bufferPtr);\n    const text = UTF16ToString(bufferPtr);\n    free(bufferPtr);\n    strings.push(text);\n  }\n  return strings.join(\"\\n\\n\");\n};\n\nconst closeDocument = (docPtr: number) => {\n  mod.FPDF_CloseDocument(docPtr);\n};\n\nconst getSelectedText = (\n  docPtr: number,\n  pageIndex: number,\n  selection: PageTextSelection\n) => {\n  const pagePtr = mod.FPDF_LoadPage(docPtr, pageIndex);\n  const textPagePtr = mod.FPDFText_LoadPage(pagePtr);\n  let offset = selection.end - selection.start;\n  if (selection.end === -1) {\n    offset = mod.FPDFText_CountChars(textPagePtr);\n  }\n  return getTextFromPage(textPagePtr, {\n    start: selection.start,\n    offset,\n  });\n};\n\nconst getCharIndexAtPos = (\n  page: {\n    width: number;\n    height: number;\n    index: number;\n    docPtr: number;\n  },\n  coords: Coords\n) => {\n  const pagePtr = mod.FPDF_LoadPage(page.docPtr, page.index);\n  const textPagePtr = mod.FPDFText_LoadPage(pagePtr);\n  const pdfCoords = getPDFCoords(pagePtr, page.width, page.height, coords);\n  const charIndex = PDFEngine.getCharIndex(textPagePtr, pdfCoords);\n  return { charIndex, pdfCoords };\n};\n\nconst getTextFromRectOld = (textPagePtr: number, rect: PDFRect) => {\n  const { left, top, right, bottom } = rect;\n  const utf16Length = mod.FPDFText_GetBoundedText(\n    textPagePtr,\n    left,\n    top,\n    right,\n    bottom,\n    0,\n    0\n  );\n\n  const bytesCount = (utf16Length + 1) * 2; // include NIL\n  const textBuffer = malloc(bytesCount);\n  mod.FPDFText_GetBoundedText(\n    textPagePtr,\n    left,\n    top,\n    right,\n    bottom,\n    textBuffer,\n    bytesCount\n  );\n  const content = UTF16ToString(textBuffer);\n  free(textBuffer);\n  return content;\n};\n\nexport const renderPage = (page: Page, scale: number, withText = false) => {\n  // const now = performance.now();\n  const DPR = typeof window == \"undefined\" ? 1 : window.devicePixelRatio || 1;\n  const bytesPerPixel = 4;\n  const w = Math.ceil(page.width * scale * DPR);\n  const h = Math.ceil(page.height * scale * DPR);\n  const len = w * h * bytesPerPixel;\n\n  const ptr = malloc(len);\n\n  const bitmapPtr = mod.FPDFBitmap_CreateEx(\n    w,\n    h,\n    BitmapFormat.Bitmap_BGRA,\n    ptr,\n    w * bytesPerPixel\n  );\n  mod.FPDFBitmap_FillRect(bitmapPtr, 0, 0, w, h, 0xffffffff);\n\n  const pagePtr = mod.FPDF_LoadPage(page.docPtr, page.index);\n\n  mod.FPDF_RenderPageBitmap(\n    bitmapPtr,\n    pagePtr,\n    0,\n    0,\n    w,\n    h,\n    0, // rotation\n    RenderFlag.REVERSE_BYTE_ORDER\n  );\n  free(bitmapPtr);\n  mod.FPDFBitmap_Destroy(bitmapPtr);\n\n  const buffer = getBitmapArrayBuffer(ptr, len);\n  free(ptr);\n  const textRects: PDFTextRect[] = [];\n\n  if (withText) {\n    const textPagePtr = mod.FPDFText_LoadPage(pagePtr);\n    const rectsCount = mod.FPDFText_CountRects(textPagePtr, 0, -1);\n    for (let i = 0; i < rectsCount; i++) {\n      const currentRect = getRect(textPagePtr, i);\n      if (!currentRect) continue;\n      // updates page PDFRect origin to match the device \"user space\"\n      const { x, y } = getPDFCoords(pagePtr, page.width, page.height, {\n        x: currentRect.left,\n        y: currentRect.top,\n      });\n      currentRect.x = x;\n      currentRect.y = y;\n      const text = getTextFromRectOld(textPagePtr, currentRect);\n\n      textRects.push({\n        rect: currentRect,\n        text,\n        transformX: currentRect.width / measureWidth(text),\n        transformY: currentRect.height / 16,\n      });\n    }\n    mod.FPDFText_ClosePage(textPagePtr);\n  }\n  mod.FPDF_ClosePage(pagePtr);\n  // const end = performance.now();\n  // console.log(`time ${page.index}:`, (end - now) / 1000);\n  return { imageData: new ImageData(buffer, w, h), textRects };\n};\n\nconst searchTextInPage = (\n  page: Page,\n  startIndex: number,\n  keywordPtr: number,\n  flag: number\n):\n  | {\n      pageIndex: number;\n      charIndex: number;\n      charCount: number;\n    }\n  | undefined => {\n  const pagePtr = mod.FPDF_LoadPage(page.docPtr, page.index);\n  const textPagePtr = mod.FPDFText_LoadPage(pagePtr);\n\n  let result;\n  const searchHandle = mod.FPDFText_FindStart(\n    textPagePtr,\n    keywordPtr,\n    flag,\n    startIndex\n  );\n  const found = mod.FPDFText_FindNext(searchHandle);\n  if (found) {\n    const charIndex = mod.FPDFText_GetSchResultIndex(searchHandle);\n    const charCount = mod.FPDFText_GetSchCount(searchHandle);\n\n    // either FPDFText_GetCharOrigin or FPDFText_GetCharBox\n\n    result = {\n      pageIndex: page.index,\n      charIndex,\n      charCount,\n    };\n  }\n\n  mod.FPDFText_FindClose(searchHandle);\n  mod.FPDFText_ClosePage(textPagePtr);\n  mod.FPDF_ClosePage(pagePtr);\n\n  return result;\n};\n\nconst searchTextInDocument = (\n  pages: Page[],\n  searchTarget: { target: string; flag: MatchFlag }\n) => {\n  const { target, flag } = searchTarget;\n  const length = 2 * (target.length + 1);\n  const keywordPtr = malloc(length);\n  pdfium.stringToUTF16(target, keywordPtr, length);\n\n  const results = [];\n  for (let i = 0; i < pages.length; i++) {\n    const page = pages[i];\n    const res = searchTextInPage(page, 0, keywordPtr, flag);\n    if (res) results.push(res);\n  }\n\n  free(keywordPtr);\n  return results;\n};\n\nconst PDFEngine = {\n  destroy,\n  extractText,\n  getMetadata,\n  openDocument,\n  getTextRectsForPage,\n  renderPageAsBMP,\n  getTextFromPage,\n  getCharIndex,\n  getCharRect,\n  closeDocument,\n  getSelectedText,\n  getCharIndexAtPos,\n  getThumbnails,\n  openPage: (docPtr: number, index: number) => mod.FPDF_LoadPage(docPtr, index),\n  openTextPage: (pagePtr: number) => mod.FPDFText_LoadPage(pagePtr),\n  closePage: (pagePtr: number) => mod.FPDF_ClosePage(pagePtr),\n  closeTextPage: (textPagePtr: number) => mod.FPDFText_ClosePage(textPagePtr),\n  renderPage,\n  searchTextInDocument,\n  getPDFCoords,\n  getTextFromSelection: (\n    textPagePtr: number,\n    selection: { start: number; end: number }\n  ) => {\n    let offset = selection.end - selection.start;\n    if (selection.end === -1) {\n      offset = mod.FPDFText_CountChars(textPagePtr);\n    }\n    return getTextFromPage(textPagePtr, {\n      start: selection.start,\n      offset,\n    });\n  },\n  getThumbnailsForPage,\n};\n\nexport default PDFEngine;\n","/* eslint-disable no-restricted-globals */\n\nimport { createPDFiumModule } from \"pdfium\";\nimport { MatchFlag, PDFFile, PDFMetadata, PDFTextRect, Page } from \"./types\";\nimport PDFEngine, { createEngine } from \"./engine\";\nimport { imageDataCache, textRectsCache } from \"./cache\";\n\nlet isEngineReady = false;\n\nconst imageCache = imageDataCache();\nconst rectsCache = textRectsCache();\nlet cachedPages: Page[] = [];\nlet pageCount = 0;\nlet metadata: PDFMetadata | undefined;\nlet docPtr: number | undefined;\nconst pagesPtr: Map<number, number> = new Map();\nconst textPagesPtr: Map<number, number> = new Map();\n\nexport type EngineRunnerTask = {\n  // ask the worker if the it's ready to execute\n  isReady: {};\n  // loads the pdf document and returns the pages to render\n  loadDocument: { file: PDFFile; pw: string };\n  // renders the given pages priority on imageData then textRects\n  renderPages: { pages: Page[]; scale: number };\n  // returns the currently selected text\n  selectedText: {\n    start: {\n      pageIndex: number;\n      coord: { x: number; y: number };\n    };\n    end: {\n      pageIndex: number;\n      coord: { x: number; y: number };\n    };\n  };\n  // returns list of thumbnails\n  getThumbnails: { start: number; end: number };\n  // returns metadata for document\n  getMetadata: {};\n  // returns occurrences of keyword\n  searchText: { keyword: string; flag: MatchFlag };\n};\n\nexport type EngineRunnerResult = {\n  engineReady: boolean;\n  loadDocument: Page[];\n  pageImageData: { imageData: ImageData; renderedScale: number; index: number };\n  pageTextRects: { textRects: PDFTextRect[]; index: number };\n  selectedText: string;\n  getThumbnails: string[];\n  getMetadata: PDFMetadata;\n  searchText: { keyword: string; flag: MatchFlag };\n};\n\nexport type EngineRequest = {\n  [T in keyof EngineRunnerTask]: { type: T; payload: EngineRunnerTask[T] };\n}[keyof EngineRunnerTask];\n\nexport type EngineResult = {\n  [T in keyof EngineRunnerResult]: { type: T; payload: EngineRunnerResult[T] };\n}[keyof EngineRunnerResult];\n\nconst loadDocument = (file: PDFFile, pw: string) => {\n  const res = PDFEngine.openDocument(file, pw);\n  if (res) {\n    cachedPages = res.pages;\n    pageCount = res.pageCount;\n    docPtr = res.docPtr;\n    self.postMessage({ type: \"loadDocument\", payload: res.pages });\n  }\n};\n\nconst openPage = (pageIndex: number) => {\n  if (docPtr === undefined) return;\n  let ptr = pagesPtr.get(pageIndex);\n  if (ptr === undefined) {\n    ptr = PDFEngine.openPage(docPtr, pageIndex);\n    pagesPtr.set(pageIndex, ptr);\n  }\n  return ptr;\n};\n\nconst openTextPage = (pageIndex: number) => {\n  let textPtr = textPagesPtr.get(pageIndex);\n  const ptr = pagesPtr.get(pageIndex);\n  if (ptr === undefined) return;\n  if (textPtr === undefined) {\n    textPtr = PDFEngine.openTextPage(ptr);\n    textPagesPtr.set(pageIndex, textPtr);\n  }\n  return textPtr;\n};\n\nconst renderPages = (pages: Page[], scale: number, DPI = 1) => {\n  pages.forEach((page) => {\n    // open the page to get its pointer\n    const ptr = openPage(page.index);\n    if (ptr === undefined) return;\n\n    // get the image data\n    let imageData = imageCache.get(page.index, scale);\n    if (imageData === undefined) {\n      imageData = PDFEngine.renderPageAsBMP(\n        ptr,\n        page.width,\n        page.height,\n        scale,\n        DPI\n      );\n      imageCache.add(page.index, scale, imageData);\n    }\n\n    self.postMessage({\n      type: \"pageImageData\",\n      payload: {\n        index: page.index,\n        imageData,\n        renderedScale: scale,\n      },\n    });\n  });\n\n  pages.forEach((page) => {\n    const pagePtr = pagesPtr.get(page.index);\n    if (pagePtr === undefined) return;\n    const textPtr = openTextPage(page.index);\n    if (textPtr === undefined) return;\n\n    let textRects = rectsCache.get(page.index);\n    if (textRects === undefined) {\n      textRects = PDFEngine.getTextRectsForPage(\n        pagePtr,\n        textPtr,\n        page.width,\n        page.height\n      );\n      rectsCache.add(page.index, textRects);\n    }\n\n    self.postMessage({\n      type: \"pageTextRects\",\n      payload: {\n        index: page.index,\n        textRects,\n      },\n    });\n  });\n};\n\nconst fixCoords = (payload: EngineRunnerTask[\"selectedText\"]) => {\n  const { start, end } = payload;\n\n  const startPtr = pagesPtr.get(start.pageIndex);\n  let endPtr = startPtr;\n  if (start.pageIndex !== end.pageIndex) {\n    endPtr = pagesPtr.get(end.pageIndex);\n  }\n\n  const startPage = cachedPages.find((i) => i.index === start.pageIndex);\n  const endPage = cachedPages.find((i) => i.index === end.pageIndex);\n  if (startPtr === undefined || endPtr === undefined || !startPage || !endPage)\n    return;\n\n  const s = PDFEngine.getPDFCoords(\n    startPtr,\n    startPage.width,\n    startPage.height,\n    start.coord\n  );\n\n  const e = PDFEngine.getPDFCoords(\n    endPtr,\n    endPage.width,\n    endPage.height,\n    end.coord\n  );\n\n  return { s, e };\n};\n\nconst getSelectedText = (payload: EngineRunnerTask[\"selectedText\"]) => {\n  const { start, end } = payload;\n\n  const startPageTextPtr = textPagesPtr.get(start.pageIndex);\n  let endPageTextPtr = startPageTextPtr;\n  if (start.pageIndex !== end.pageIndex) {\n    endPageTextPtr = textPagesPtr.get(end.pageIndex);\n  }\n\n  if (startPageTextPtr === undefined || endPageTextPtr === undefined) return;\n\n  const fixed = fixCoords(payload);\n\n  if (!fixed) return;\n\n  const startChar = PDFEngine.getCharIndex(startPageTextPtr, fixed.s);\n  const endChar = PDFEngine.getCharIndex(endPageTextPtr, fixed.e);\n\n  if (start.pageIndex === end.pageIndex) {\n    self.postMessage({\n      type: \"selectedText\",\n      payload: PDFEngine.getTextFromSelection(startPageTextPtr, {\n        start: startChar,\n        end: endChar,\n      }),\n    });\n    return;\n  }\n\n  let text = \"\";\n\n  for (let i = start.pageIndex; i <= end.pageIndex; i++) {\n    if (i === start.pageIndex) {\n      text += PDFEngine.getTextFromSelection(startPageTextPtr, {\n        start: startChar,\n        end: -1,\n      });\n    } else if (i === end.pageIndex) {\n      text += PDFEngine.getTextFromSelection(startPageTextPtr, {\n        start: 0,\n        end: endChar,\n      });\n    } else {\n      const intermediatePtr = textPagesPtr.get(i);\n      if (intermediatePtr) {\n        text += PDFEngine.getTextFromSelection(startPageTextPtr, {\n          start: 0,\n          end: -1,\n        });\n      }\n    }\n  }\n  self.postMessage({ type: \"selectedText\", payload: text });\n};\n\n// generates thumbnails for the pages between the range.start & range.end\nconst getThumbnails = async (range: { start: number; end: number }) => {\n  const promises: Promise<string | undefined>[] = [];\n  if (docPtr === undefined) return;\n  for (let i = range.start; i <= range.end; i++) {\n    const page = cachedPages.find((it) => it.index === i);\n    if (!page) return;\n    promises.push(\n      PDFEngine.getThumbnailsForPage(docPtr, i, page.width, page.height)\n    );\n  }\n  self.postMessage({\n    type: \"getThumbnails\",\n    payload: await Promise.all(promises),\n  });\n};\n\nself.onmessage = async (msg: MessageEvent<EngineRequest>) => {\n  const req = msg.data;\n  switch (req.type) {\n    case \"isReady\":\n      self.postMessage({ type: \"engineReady\", isReady: isEngineReady });\n      break;\n    case \"loadDocument\":\n      loadDocument(req.payload.file, req.payload.pw);\n      break;\n    case \"renderPages\":\n      renderPages(req.payload.pages, req.payload.scale);\n      break;\n    case \"selectedText\":\n      getSelectedText(req.payload);\n      break;\n    case \"getThumbnails\":\n      getThumbnails(req.payload);\n      break;\n  }\n};\n\n// inits wasm library and start the engine\n// sends a message once the worker is ready to execute\nconst initWasmLibrary = async () => {\n  try {\n    const module = await createPDFiumModule({});\n    createEngine(module);\n    isEngineReady = true;\n  } catch (e) {\n    console.log(\"e\", e);\n    isEngineReady = false;\n  } finally {\n    self.postMessage({ type: \"engineReady\", payload: isEngineReady });\n  }\n};\n\ninitWasmLibrary();\n","import { PDFTextRect } from \"./types\";\n\nexport const cache = <V extends unknown>() => {\n  const c = new Map<string, V>();\n  return {\n    add: (k: string, v: V) => {\n      if (!c.has(k)) c.set(k, v);\n    },\n    remove: (k: string) => {\n      if (c.has(k)) c.delete(k);\n    },\n    get: (k: string) => c.get(k),\n  };\n};\n\nexport const imageDataCache = () => {\n  const c = cache<ImageData>();\n  return {\n    add: (pageIndex: number, scale: number, imageData: ImageData) => {\n      c.add(`${pageIndex}-${scale}`, imageData);\n    },\n    remove: (pageIndex: number, scale: number) => {\n      c.remove(`${pageIndex}-${scale}`);\n    },\n    get: (pageIndex: number, scale: number) => c.get(`${pageIndex}-${scale}`),\n  };\n};\n\nexport const textRectsCache = () => {\n  const c = cache<PDFTextRect[]>();\n  return {\n    add: (pageIndex: number, rects: PDFTextRect[]) => {\n      c.add(`${pageIndex}`, rects);\n    },\n    remove: (pageIndex: number) => {\n      c.remove(`${pageIndex}`);\n    },\n    get: (pageIndex: number) => c.get(`${pageIndex}`),\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [288], function() { return __webpack_require__(1170); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"452cc6fe\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t914: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkpdfium_react\"] = self[\"webpackChunkpdfium_react\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(288).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["wrappedModuleMethods","PDFium_Init","PDFium_OpenFileWriter","PDFium_CloseFileWriter","PDFium_GetFileWriterSize","PDFium_GetFileWriterData","PDFium_OpenFormFillInfo","PDFium_CloseFormFillInfo","PDFium_InitFormFillEnvironment","PDFium_ExitFormFillEnvironment","PDFium_SaveAsCopy","FPDF_LoadMemDocument","FPDF_GetPageSizeByIndexF","FPDF_GetLastError","FPDF_GetPageCount","FPDF_CloseDocument","FPDF_DestroyLibrary","FPDF_GetMetaText","FPDFBitmap_FillRect","FPDFBitmap_Create","FPDFBitmap_CreateEx","FPDFBitmap_GetBuffer","FPDFBitmap_GetWidth","FPDFBitmap_GetHeight","FPDFBitmap_GetFormat","FPDFBitmap_Destroy","FPDFPageObj_Destroy","FPDFPageObj_NewImageObj","FPDFPageObj_SetMatrix","FPDFPageObj_GetBounds","FPDFPageObj_Transform","FPDFImageObj_SetBitmap","FPDFImageObj_GetBitmap","FPDFPath_CountSegments","FPDFPath_GetPathSegment","FPDFPathSegment_GetType","FPDFPathSegment_GetPoint","FPDFPathSegment_GetClose","FPDFFormObj_CountObjects","FPDFFormObj_GetObject","FPDFBookmark_GetFirstChild","FPDFBookmark_GetNextSibling","FPDFBookmark_Find","FPDFBookmark_GetTitle","FPDFBookmark_GetAction","FPDFBookmark_GetDest","FPDFAction_GetType","FPDFAction_GetFilePath","FPDFAction_GetDest","FPDFAction_GetURIPath","FPDFDest_GetDestPageIndex","FPDFDest_GetView","FPDFDest_GetLocationInPage","FPDF_LoadPage","FPDF_RenderPageBitmap","FPDF_PageToDevice","FPDF_DeviceToPage","FPDFPage_GetAnnotCount","FPDFPage_GetAnnot","FPDFPage_CreateAnnot","FPDFPage_InsertObject","FPDFPage_RemoveAnnot","FPDFPage_GenerateContent","FPDF_ClosePage","FPDFAnnot_GetSubtype","FPDFAnnot_GetAP","FPDFAnnot_GetObjectCount","FPDFAnnot_GetObject","FPDFAnnot_AppendObject","FPDFAnnot_GetRect","FPDFAnnot_SetRect","FPDFAnnot_GetLink","FPDFAnnot_GetFormFieldType","FPDFAnnot_GetFormFieldFlags","FPDFAnnot_GetFormFieldName","FPDFAnnot_GetFormFieldAlternateName","FPDFAnnot_GetFormFieldValue","FPDFAnnot_GetOptionCount","FPDFAnnot_GetOptionLabel","FPDFAnnot_IsOptionSelected","FPDFAnnot_IsChecked","FPDFAnnot_GetStringValue","FPDFAnnot_GetColor","FPDFAnnot_GetLinkedAnnot","FPDFAnnot_GetInkListCount","FPDFAnnot_GetInkListPath","FPDFAnnot_AddInkStroke","FPDFAnnot_RemoveInkList","FPDFAnnot_GetVertices","FPDFAnnot_GetLine","FPDFPageObj_GetType","FPDFLink_GetDest","FPDFLink_GetAction","FPDFText_LoadPage","FPDFText_CountChars","FPDFText_CountRects","FPDFText_GetRect","FPDFText_GetCharIndexAtPos","FPDFText_GetFontSize","FPDFText_GetFontInfo","FPDFText_GetBoundedText","FPDFText_FindStart","FPDFText_FindNext","FPDFText_FindPrev","FPDFText_GetSchResultIndex","FPDFText_GetSchCount","FPDFText_FindClose","FPDFText_ClosePage","FPDFText_GetText","FPDFPage_CloseAnnot","FPDFDoc_GetAttachmentCount","FPDFDoc_GetAttachment","FPDFAttachment_GetName","FPDFAttachment_GetStringValue","FPDFAttachment_GetFile","FPDF_GetSignatureCount","FPDF_GetSignatureObject","FPDFSignatureObj_GetContents","FPDFSignatureObj_GetByteRange","FPDFSignatureObj_GetSubFilter","FPDFSignatureObj_GetReason","FPDFSignatureObj_GetTime","FPDFSignatureObj_GetDocMDPPermission","FPDF_CreateNewDocument","FPDF_ImportPagesByIndex","FPDF_ImportPages","FPDFPage_CountObjects","FPDFPage_GetObject","FPDFText_GetCharBox","FPDFText_GetMatrix","FPDFText_GetCharOrigin","mod","pdfium","docPtr","BitmapFormat","RenderFlag","canvas","OffscreenCanvas","malloc","size","_malloc","free","ptr","_free","getBitmapArrayBuffer","len","arr","Uint8ClampedArray","set","HEAPU8","subarray","getValue","value","UTF16ToString","getPDFCoords","pagePtr","pageWidth","pageHeight","coords","deviceXPtr","deviceYPtr","x","y","getRect","textPagePtr","index","topPtr","leftPtr","rightPtr","bottomPtr","left","top","right","bottom","width","Math","abs","height","getTextFromPage","bounds","bufferPtr","offset","start","text","getThumbnails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pages","wrap","_context","prev","next","Promise","all","map","page","imageData","renderPageAsBMP","ctx","getContext","putImageData","abrupt","sent","stop","_x","apply","arguments","getThumbnailsForPage","_ref2","_callee2","_context2","convertToBlob","then","blob","URL","createObjectURL","_x2","_x3","_x4","_x5","scale","DPI","w","ceil","h","bitmapPtr","Bitmap_BGRA","REVERSE_BYTE_ORDER","buffer","ImageData","measureWidth","font","measureText","readMetaText","key","readChars","parseChars","defaultLength","length","undefined","i","HEAP8","str","actualLength","readString","bufferLength","getTextFromRectOld","rect","bytesCount","textBuffer","content","searchTextInPage","startIndex","keywordPtr","flag","result","searchHandle","charIndex","charCount","pageIndex","PDFEngine","destroy","extractText","pageCount","pageIndexes","indexes","Array","from","keys","strings","push","join","getMetadata","title","author","subject","keywords","producer","creator","creationDate","modificationDate","console","error","openDocument","file","password","array","Uint8Array","filePtr","setHEAPU8","outPtr","maxBytesToRead","passwordBytesSize","TextEncoder","encode","passwordPtr","stringToUTF8","lastError","sizePtr","getTextRectsForPage","textRects","rectsCount","currentRect","_getPDFCoords","transformX","transformY","getCharIndex","pos","getCharRect","closeDocument","getSelectedText","selection","end","getCharIndexAtPos","pdfCoords","openPage","openTextPage","closePage","closeTextPage","renderPage","withText","DPR","window","devicePixelRatio","_getPDFCoords2","searchTextInDocument","searchTarget","target","stringToUTF16","results","res","getTextFromSelection","cache","c","Map","add","k","v","has","remove","delete","get","isEngineReady","imageCache","concat","imageDataCache","rectsCache","rects","textRectsCache","cachedPages","pagesPtr","textPagesPtr","loadDocument","pw","self","postMessage","type","payload","renderPages","forEach","renderedScale","textPtr","startPageTextPtr","endPageTextPtr","fixed","startPtr","endPtr","startPage","find","endPage","s","coord","e","fixCoords","startChar","endChar","range","promises","_loop","_ret","it","delegateYield","t0","t1","t2","t3","call","onmessage","msg","req","_context3","data","isReady","initWasmLibrary","_ref3","_callee3","module","_context4","createPDFiumModule","cwrap","dict","wrappedModule","pdfiumModule","log","finish","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","id","loaded","__webpack_modules__","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","chunkId","reduce","u","miniCssF","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}